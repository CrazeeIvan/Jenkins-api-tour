apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'project-report'
apply plugin: 'maven'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.linkedin:org.linkedin.gradle-plugins:1.5.0'
    }
}

apply plugin: 'org.linkedin.userConfig'
apply plugin: 'org.linkedin.spec'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    hudson
}
dependencies {
    compile spec.libraries.ivy
    compile spec.libraries.httpBuilder
    testCompile spec.libraries.spock
    testCompile spec.libraries.junit
    groovy spec.libraries.groovy
    hudson files('src/test/hudson/hudson.war')
}

group = spec.group
version = spec.version

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def DUMMY_NAME  = 'DUMMY_NAME'
task runHudson << {
    ['java', '-jar', 'src/test/hudson/hudson.war', "-D$DUMMY_NAME"].execute()
}

task killHudson << {
    final Process findProcess = ['ps', '-a'].execute()
    findProcess.waitFor()
    findProcess.text.eachLine {line ->
        if(line.contains(DUMMY_NAME))
        {
            ['kill', '-9', line.split()[0]].execute()
            return
        }
    }
}